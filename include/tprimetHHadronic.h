// -*- C++ -*-
// This is a header file generated with the command:
// makeCMS3ClassFiles("/wk_cms/ykao/work/CMSSW_10_6_8/rootfiles/ntuples_v1.7/TprimeBToTH_M-700_LH_TuneCUETP8M1_13TeV_Era2016_v1p7.root", "tagsDumper/trees/tHq_13TeV_THQHadronicTag", "tprimetHHadronic", "tprime", "analyzer")

#ifndef tprimetHHadronic_H
#define tprimetHHadronic_H

#include "Math/LorentzVector.h"
#include "Math/Point3D.h"
#include "TMath.h"
#include "TBranch.h"
#include "TTree.h"
#include "TH1F.h"
#include "TFile.h"
#include "TBits.h"
#include <vector> 
#include <unistd.h> 
typedef ROOT::Math::LorentzVector< ROOT::Math::PxPyPzE4D<float> > LorentzVector;

using namespace std; 
class tprimetHHadronic {
 private: 
 protected: 
  unsigned int index;
  int      candidate_id_;
  TBranch *candidate_id_branch;
  bool     candidate_id_isLoaded;
  float    weight_;
  TBranch *weight_branch;
  bool     weight_isLoaded;
  float    CMS_hgg_mass_;
  TBranch *CMS_hgg_mass_branch;
  bool     CMS_hgg_mass_isLoaded;
  float    dZ_;
  TBranch *dZ_branch;
  bool     dZ_isLoaded;
  float    centralObjectWeight_;
  TBranch *centralObjectWeight_branch;
  bool     centralObjectWeight_isLoaded;
  float    vtxprob_;
  TBranch *vtxprob_branch;
  bool     vtxprob_isLoaded;
  float    ptbal_;
  TBranch *ptbal_branch;
  bool     ptbal_isLoaded;
  float    ptasym_;
  TBranch *ptasym_branch;
  bool     ptasym_isLoaded;
  float    logspt2_;
  TBranch *logspt2_branch;
  bool     logspt2_isLoaded;
  float    p2conv_;
  TBranch *p2conv_branch;
  bool     p2conv_isLoaded;
  float    nconv_;
  TBranch *nconv_branch;
  bool     nconv_isLoaded;
  float    vtxmva_;
  TBranch *vtxmva_branch;
  bool     vtxmva_isLoaded;
  float    vtxdz_;
  TBranch *vtxdz_branch;
  bool     vtxdz_isLoaded;
  float    vtx_x_;
  TBranch *vtx_x_branch;
  bool     vtx_x_isLoaded;
  float    vtx_y_;
  TBranch *vtx_y_branch;
  bool     vtx_y_isLoaded;
  float    vtx_z_;
  TBranch *vtx_z_branch;
  bool     vtx_z_isLoaded;
  float    dipho_sumpt_;
  TBranch *dipho_sumpt_branch;
  bool     dipho_sumpt_isLoaded;
  float    dipho_cosphi_;
  TBranch *dipho_cosphi_branch;
  bool     dipho_cosphi_isLoaded;
  float    dipho_mass_;
  TBranch *dipho_mass_branch;
  bool     dipho_mass_isLoaded;
  float    dipho_pt_;
  TBranch *dipho_pt_branch;
  bool     dipho_pt_isLoaded;
  float    dipho_phi_;
  TBranch *dipho_phi_branch;
  bool     dipho_phi_isLoaded;
  float    dipho_eta_;
  TBranch *dipho_eta_branch;
  bool     dipho_eta_isLoaded;
  float    dipho_e_;
  TBranch *dipho_e_branch;
  bool     dipho_e_isLoaded;
  float    dipho_PtoM_;
  TBranch *dipho_PtoM_branch;
  bool     dipho_PtoM_isLoaded;
  float    cosphi_;
  TBranch *cosphi_branch;
  bool     cosphi_isLoaded;
  float    sigmaMrvoM_;
  TBranch *sigmaMrvoM_branch;
  bool     sigmaMrvoM_isLoaded;
  float    sigmaMwvoM_;
  TBranch *sigmaMwvoM_branch;
  bool     sigmaMwvoM_isLoaded;
  float    dipho_leadPt_;
  TBranch *dipho_leadPt_branch;
  bool     dipho_leadPt_isLoaded;
  float    dipho_leadEt_;
  TBranch *dipho_leadEt_branch;
  bool     dipho_leadEt_isLoaded;
  float    dipho_leadEta_;
  TBranch *dipho_leadEta_branch;
  bool     dipho_leadEta_isLoaded;
  float    dipho_leadPhi_;
  TBranch *dipho_leadPhi_branch;
  bool     dipho_leadPhi_isLoaded;
  float    dipho_lead_sieie_;
  TBranch *dipho_lead_sieie_branch;
  bool     dipho_lead_sieie_isLoaded;
  float    dipho_lead_hoe_;
  TBranch *dipho_lead_hoe_branch;
  bool     dipho_lead_hoe_isLoaded;
  float    dipho_lead_sigmaEoE_;
  TBranch *dipho_lead_sigmaEoE_branch;
  bool     dipho_lead_sigmaEoE_isLoaded;
  float    dipho_lead_ptoM_;
  TBranch *dipho_lead_ptoM_branch;
  bool     dipho_lead_ptoM_isLoaded;
  float    dipho_leadR9_;
  TBranch *dipho_leadR9_branch;
  bool     dipho_leadR9_isLoaded;
  float    dipho_leadIDMVA_;
  TBranch *dipho_leadIDMVA_branch;
  bool     dipho_leadIDMVA_isLoaded;
  float    dipho_lead_elveto_;
  TBranch *dipho_lead_elveto_branch;
  bool     dipho_lead_elveto_isLoaded;
  float    dipho_lead_prompt_;
  TBranch *dipho_lead_prompt_branch;
  bool     dipho_lead_prompt_isLoaded;
  float    dipho_lead_chiso_;
  TBranch *dipho_lead_chiso_branch;
  bool     dipho_lead_chiso_isLoaded;
  float    dipho_lead_chisow_;
  TBranch *dipho_lead_chisow_branch;
  bool     dipho_lead_chisow_isLoaded;
  float    dipho_lead_phoiso_;
  TBranch *dipho_lead_phoiso_branch;
  bool     dipho_lead_phoiso_isLoaded;
  float    dipho_lead_phoiso04_;
  TBranch *dipho_lead_phoiso04_branch;
  bool     dipho_lead_phoiso04_isLoaded;
  float    dipho_lead_neutiso_;
  TBranch *dipho_lead_neutiso_branch;
  bool     dipho_lead_neutiso_isLoaded;
  float    dipho_lead_ecaliso03_;
  TBranch *dipho_lead_ecaliso03_branch;
  bool     dipho_lead_ecaliso03_isLoaded;
  float    dipho_lead_hcaliso03_;
  TBranch *dipho_lead_hcaliso03_branch;
  bool     dipho_lead_hcaliso03_isLoaded;
  float    dipho_lead_pfcluecal03_;
  TBranch *dipho_lead_pfcluecal03_branch;
  bool     dipho_lead_pfcluecal03_isLoaded;
  float    dipho_lead_pfcluhcal03_;
  TBranch *dipho_lead_pfcluhcal03_branch;
  bool     dipho_lead_pfcluhcal03_isLoaded;
  float    dipho_lead_trkiso03_;
  TBranch *dipho_lead_trkiso03_branch;
  bool     dipho_lead_trkiso03_isLoaded;
  float    dipho_lead_pfchiso2_;
  TBranch *dipho_lead_pfchiso2_branch;
  bool     dipho_lead_pfchiso2_isLoaded;
  float    dipho_lead_haspixelseed_;
  TBranch *dipho_lead_haspixelseed_branch;
  bool     dipho_lead_haspixelseed_isLoaded;
  float    dipho_lead_sieip_;
  TBranch *dipho_lead_sieip_branch;
  bool     dipho_lead_sieip_isLoaded;
  float    dipho_lead_etawidth_;
  TBranch *dipho_lead_etawidth_branch;
  bool     dipho_lead_etawidth_isLoaded;
  float    dipho_lead_phiwidth_;
  TBranch *dipho_lead_phiwidth_branch;
  bool     dipho_lead_phiwidth_isLoaded;
  float    dipho_lead_regrerr_;
  TBranch *dipho_lead_regrerr_branch;
  bool     dipho_lead_regrerr_isLoaded;
  float    dipho_lead_s4ratio_;
  TBranch *dipho_lead_s4ratio_branch;
  bool     dipho_lead_s4ratio_isLoaded;
  float    dipho_lead_effSigma_;
  TBranch *dipho_lead_effSigma_branch;
  bool     dipho_lead_effSigma_isLoaded;
  float    dipho_lead_scraw_;
  TBranch *dipho_lead_scraw_branch;
  bool     dipho_lead_scraw_isLoaded;
  float    dipho_lead_ese_;
  TBranch *dipho_lead_ese_branch;
  bool     dipho_lead_ese_isLoaded;
  float    dipho_subleadPt_;
  TBranch *dipho_subleadPt_branch;
  bool     dipho_subleadPt_isLoaded;
  float    dipho_subleadEt_;
  TBranch *dipho_subleadEt_branch;
  bool     dipho_subleadEt_isLoaded;
  float    dipho_subleadEta_;
  TBranch *dipho_subleadEta_branch;
  bool     dipho_subleadEta_isLoaded;
  float    dipho_subleadPhi_;
  TBranch *dipho_subleadPhi_branch;
  bool     dipho_subleadPhi_isLoaded;
  float    dipho_sublead_sieie_;
  TBranch *dipho_sublead_sieie_branch;
  bool     dipho_sublead_sieie_isLoaded;
  float    dipho_sublead_hoe_;
  TBranch *dipho_sublead_hoe_branch;
  bool     dipho_sublead_hoe_isLoaded;
  float    dipho_sublead_sigmaEoE_;
  TBranch *dipho_sublead_sigmaEoE_branch;
  bool     dipho_sublead_sigmaEoE_isLoaded;
  float    dipho_sublead_ptoM_;
  TBranch *dipho_sublead_ptoM_branch;
  bool     dipho_sublead_ptoM_isLoaded;
  float    dipho_subleadR9_;
  TBranch *dipho_subleadR9_branch;
  bool     dipho_subleadR9_isLoaded;
  float    dipho_subleadIDMVA_;
  TBranch *dipho_subleadIDMVA_branch;
  bool     dipho_subleadIDMVA_isLoaded;
  float    dipho_sublead_elveto_;
  TBranch *dipho_sublead_elveto_branch;
  bool     dipho_sublead_elveto_isLoaded;
  float    dipho_sulead_prompt_;
  TBranch *dipho_sulead_prompt_branch;
  bool     dipho_sulead_prompt_isLoaded;
  float    dipho_sublead_chiso_;
  TBranch *dipho_sublead_chiso_branch;
  bool     dipho_sublead_chiso_isLoaded;
  float    dipho_sublead_chisow_;
  TBranch *dipho_sublead_chisow_branch;
  bool     dipho_sublead_chisow_isLoaded;
  float    dipho_sublead_phoiso_;
  TBranch *dipho_sublead_phoiso_branch;
  bool     dipho_sublead_phoiso_isLoaded;
  float    dipho_sublead_phoiso04_;
  TBranch *dipho_sublead_phoiso04_branch;
  bool     dipho_sublead_phoiso04_isLoaded;
  float    dipho_sublead_neutiso_;
  TBranch *dipho_sublead_neutiso_branch;
  bool     dipho_sublead_neutiso_isLoaded;
  float    dipho_sublead_ecaliso03_;
  TBranch *dipho_sublead_ecaliso03_branch;
  bool     dipho_sublead_ecaliso03_isLoaded;
  float    dipho_sublead_hcaliso03_;
  TBranch *dipho_sublead_hcaliso03_branch;
  bool     dipho_sublead_hcaliso03_isLoaded;
  float    dipho_sublead_pfcluecal03_;
  TBranch *dipho_sublead_pfcluecal03_branch;
  bool     dipho_sublead_pfcluecal03_isLoaded;
  float    dipho_sublead_pfcluhcal03_;
  TBranch *dipho_sublead_pfcluhcal03_branch;
  bool     dipho_sublead_pfcluhcal03_isLoaded;
  float    dipho_sublead_trkiso03_;
  TBranch *dipho_sublead_trkiso03_branch;
  bool     dipho_sublead_trkiso03_isLoaded;
  float    dipho_sublead_pfchiso2_;
  TBranch *dipho_sublead_pfchiso2_branch;
  bool     dipho_sublead_pfchiso2_isLoaded;
  float    dipho_sublead_haspixelseed_;
  TBranch *dipho_sublead_haspixelseed_branch;
  bool     dipho_sublead_haspixelseed_isLoaded;
  float    dipho_sublead_sieip_;
  TBranch *dipho_sublead_sieip_branch;
  bool     dipho_sublead_sieip_isLoaded;
  float    dipho_sublead_etawidth_;
  TBranch *dipho_sublead_etawidth_branch;
  bool     dipho_sublead_etawidth_isLoaded;
  float    dipho_sublead_phiwidth_;
  TBranch *dipho_sublead_phiwidth_branch;
  bool     dipho_sublead_phiwidth_isLoaded;
  float    dipho_sublead_regrerr_;
  TBranch *dipho_sublead_regrerr_branch;
  bool     dipho_sublead_regrerr_isLoaded;
  float    dipho_sublead_s4ratio_;
  TBranch *dipho_sublead_s4ratio_branch;
  bool     dipho_sublead_s4ratio_isLoaded;
  float    dipho_sublead_effSigma_;
  TBranch *dipho_sublead_effSigma_branch;
  bool     dipho_sublead_effSigma_isLoaded;
  float    dipho_sublead_scraw_;
  TBranch *dipho_sublead_scraw_branch;
  bool     dipho_sublead_scraw_isLoaded;
  float    dipho_sublead_ese_;
  TBranch *dipho_sublead_ese_branch;
  bool     dipho_sublead_ese_isLoaded;
  float    LeptonType_;
  TBranch *LeptonType_branch;
  bool     LeptonType_isLoaded;
  float    n_ele_;
  TBranch *n_ele_branch;
  bool     n_ele_isLoaded;
  float    n_loose_ele_;
  TBranch *n_loose_ele_branch;
  bool     n_loose_ele_isLoaded;
  float    n_veto_ele_;
  TBranch *n_veto_ele_branch;
  bool     n_veto_ele_isLoaded;
  float    n_medium_ele_;
  TBranch *n_medium_ele_branch;
  bool     n_medium_ele_isLoaded;
  float    n_tight_ele_;
  TBranch *n_tight_ele_branch;
  bool     n_tight_ele_isLoaded;
  float    ele1_pt_;
  TBranch *ele1_pt_branch;
  bool     ele1_pt_isLoaded;
  float    ele2_pt_;
  TBranch *ele2_pt_branch;
  bool     ele2_pt_isLoaded;
  float    ele1_eta_;
  TBranch *ele1_eta_branch;
  bool     ele1_eta_isLoaded;
  float    ele2_eta_;
  TBranch *ele2_eta_branch;
  bool     ele2_eta_isLoaded;
  float    ele1_phi_;
  TBranch *ele1_phi_branch;
  bool     ele1_phi_isLoaded;
  float    ele2_phi_;
  TBranch *ele2_phi_branch;
  bool     ele2_phi_isLoaded;
  float    ele1_e_;
  TBranch *ele1_e_branch;
  bool     ele1_e_isLoaded;
  float    ele2_e_;
  TBranch *ele2_e_branch;
  bool     ele2_e_isLoaded;
  float    ele1_ch_;
  TBranch *ele1_ch_branch;
  bool     ele1_ch_isLoaded;
  float    ele2_ch_;
  TBranch *ele2_ch_branch;
  bool     ele2_ch_isLoaded;
  float    ele1_sigmaIetaIeta_;
  TBranch *ele1_sigmaIetaIeta_branch;
  bool     ele1_sigmaIetaIeta_isLoaded;
  float    ele2_sigmaIetaIeta_;
  TBranch *ele2_sigmaIetaIeta_branch;
  bool     ele2_sigmaIetaIeta_isLoaded;
  float    ele1_dEtaInSeed_;
  TBranch *ele1_dEtaInSeed_branch;
  bool     ele1_dEtaInSeed_isLoaded;
  float    ele2_dEtaInSeed_;
  TBranch *ele2_dEtaInSeed_branch;
  bool     ele2_dEtaInSeed_isLoaded;
  float    ele1_dPhiIn_;
  TBranch *ele1_dPhiIn_branch;
  bool     ele1_dPhiIn_isLoaded;
  float    ele2_dPhiIn_;
  TBranch *ele2_dPhiIn_branch;
  bool     ele2_dPhiIn_isLoaded;
  float    ele1_hOverE_;
  TBranch *ele1_hOverE_branch;
  bool     ele1_hOverE_isLoaded;
  float    ele2_hOverE_;
  TBranch *ele2_hOverE_branch;
  bool     ele2_hOverE_isLoaded;
  float    ele1_RelIsoEA_;
  TBranch *ele1_RelIsoEA_branch;
  bool     ele1_RelIsoEA_isLoaded;
  float    ele2_RelIsoEA_;
  TBranch *ele2_RelIsoEA_branch;
  bool     ele2_RelIsoEA_isLoaded;
  float    ele1_ooEmooP_;
  TBranch *ele1_ooEmooP_branch;
  bool     ele1_ooEmooP_isLoaded;
  float    ele2_ooEmooP_;
  TBranch *ele2_ooEmooP_branch;
  bool     ele2_ooEmooP_isLoaded;
  float    ele1_dxy_;
  TBranch *ele1_dxy_branch;
  bool     ele1_dxy_isLoaded;
  float    ele2_dxy_;
  TBranch *ele2_dxy_branch;
  bool     ele2_dxy_isLoaded;
  float    ele1_diphodxy_;
  TBranch *ele1_diphodxy_branch;
  bool     ele1_diphodxy_isLoaded;
  float    ele2_diphodxy_;
  TBranch *ele2_diphodxy_branch;
  bool     ele2_diphodxy_isLoaded;
  float    ele1_dz_;
  TBranch *ele1_dz_branch;
  bool     ele1_dz_isLoaded;
  float    ele2_dz_;
  TBranch *ele2_dz_branch;
  bool     ele2_dz_isLoaded;
  float    ele1_diphodz_;
  TBranch *ele1_diphodz_branch;
  bool     ele1_diphodz_isLoaded;
  float    ele2_diphodz_;
  TBranch *ele2_diphodz_branch;
  bool     ele2_diphodz_isLoaded;
  float    ele1_misHits_;
  TBranch *ele1_misHits_branch;
  bool     ele1_misHits_isLoaded;
  float    ele2_misHits_;
  TBranch *ele2_misHits_branch;
  bool     ele2_misHits_isLoaded;
  float    ele1_ConversionVeto_;
  TBranch *ele1_ConversionVeto_branch;
  bool     ele1_ConversionVeto_isLoaded;
  float    ele2_ConversionVeto_;
  TBranch *ele2_ConversionVeto_branch;
  bool     ele2_ConversionVeto_isLoaded;
  float    ele1_ChargedHadronPt_;
  TBranch *ele1_ChargedHadronPt_branch;
  bool     ele1_ChargedHadronPt_isLoaded;
  float    ele2_ChargedHadronPt_;
  TBranch *ele2_ChargedHadronPt_branch;
  bool     ele2_ChargedHadronPt_isLoaded;
  float    ele2_NeutralHadronEt_;
  TBranch *ele2_NeutralHadronEt_branch;
  bool     ele2_NeutralHadronEt_isLoaded;
  float    ele1_NeutralHadronEt_;
  TBranch *ele1_NeutralHadronEt_branch;
  bool     ele1_NeutralHadronEt_isLoaded;
  float    ele1_PhotonEt_;
  TBranch *ele1_PhotonEt_branch;
  bool     ele1_PhotonEt_isLoaded;
  float    ele2_PhotonEt_;
  TBranch *ele2_PhotonEt_branch;
  bool     ele2_PhotonEt_isLoaded;
  float    ele1_PassTight_;
  TBranch *ele1_PassTight_branch;
  bool     ele1_PassTight_isLoaded;
  float    ele2_PassTight_;
  TBranch *ele2_PassTight_branch;
  bool     ele2_PassTight_isLoaded;
  float    ele1_PassVeto_;
  TBranch *ele1_PassVeto_branch;
  bool     ele1_PassVeto_isLoaded;
  float    ele2_PassVeto_;
  TBranch *ele2_PassVeto_branch;
  bool     ele2_PassVeto_isLoaded;
  float    ele1_dPhiMET_;
  TBranch *ele1_dPhiMET_branch;
  bool     ele1_dPhiMET_isLoaded;
  float    ele2_dPhiMET_;
  TBranch *ele2_dPhiMET_branch;
  bool     ele2_dPhiMET_isLoaded;
  float    n_muons_;
  TBranch *n_muons_branch;
  bool     n_muons_isLoaded;
  float    n_LooseMu25_;
  TBranch *n_LooseMu25_branch;
  bool     n_LooseMu25_isLoaded;
  float    n_LooseMu15_;
  TBranch *n_LooseMu15_branch;
  bool     n_LooseMu15_isLoaded;
  float    n_TightMu25_;
  TBranch *n_TightMu25_branch;
  bool     n_TightMu25_isLoaded;
  float    n_TightMu15_;
  TBranch *n_TightMu15_branch;
  bool     n_TightMu15_isLoaded;
  float    n_MediumMu25_;
  TBranch *n_MediumMu25_branch;
  bool     n_MediumMu25_isLoaded;
  float    n_MediumMu15_;
  TBranch *n_MediumMu15_branch;
  bool     n_MediumMu15_isLoaded;
  float    muon1_pt_;
  TBranch *muon1_pt_branch;
  bool     muon1_pt_isLoaded;
  float    muon2_pt_;
  TBranch *muon2_pt_branch;
  bool     muon2_pt_isLoaded;
  float    muon1_eta_;
  TBranch *muon1_eta_branch;
  bool     muon1_eta_isLoaded;
  float    muon2_eta_;
  TBranch *muon2_eta_branch;
  bool     muon2_eta_isLoaded;
  float    muon1_phi_;
  TBranch *muon1_phi_branch;
  bool     muon1_phi_isLoaded;
  float    muon2_phi_;
  TBranch *muon2_phi_branch;
  bool     muon2_phi_isLoaded;
  float    muon1_e_;
  TBranch *muon1_e_branch;
  bool     muon1_e_isLoaded;
  float    muon2_e_;
  TBranch *muon2_e_branch;
  bool     muon2_e_isLoaded;
  float    muon1_ch_;
  TBranch *muon1_ch_branch;
  bool     muon1_ch_isLoaded;
  float    muon2_ch_;
  TBranch *muon2_ch_branch;
  bool     muon2_ch_isLoaded;
  float    muon1_iso_;
  TBranch *muon1_iso_branch;
  bool     muon1_iso_isLoaded;
  float    muon2_iso_;
  TBranch *muon2_iso_branch;
  bool     muon2_iso_isLoaded;
  float    muon1_chi2_;
  TBranch *muon1_chi2_branch;
  bool     muon1_chi2_isLoaded;
  float    muon2_chi2_;
  TBranch *muon2_chi2_branch;
  bool     muon2_chi2_isLoaded;
  float    muon1_mHits_;
  TBranch *muon1_mHits_branch;
  bool     muon1_mHits_isLoaded;
  float    muon2_mHits_;
  TBranch *muon2_mHits_branch;
  bool     muon2_mHits_isLoaded;
  float    muon1_mStations_;
  TBranch *muon1_mStations_branch;
  bool     muon1_mStations_isLoaded;
  float    muon2_mStations_;
  TBranch *muon2_mStations_branch;
  bool     muon2_mStations_isLoaded;
  float    muon1_dxy_;
  TBranch *muon1_dxy_branch;
  bool     muon1_dxy_isLoaded;
  float    muon2_dxy_;
  TBranch *muon2_dxy_branch;
  bool     muon2_dxy_isLoaded;
  float    muon1_diphodxy_;
  TBranch *muon1_diphodxy_branch;
  bool     muon1_diphodxy_isLoaded;
  float    muon2_diphodxy_;
  TBranch *muon2_diphodxy_branch;
  bool     muon2_diphodxy_isLoaded;
  float    muon1_dz_;
  TBranch *muon1_dz_branch;
  bool     muon1_dz_isLoaded;
  float    muon2_dz_;
  TBranch *muon2_dz_branch;
  bool     muon2_dz_isLoaded;
  float    muon1_diphodz_;
  TBranch *muon1_diphodz_branch;
  bool     muon1_diphodz_isLoaded;
  float    muon2_diphodz_;
  TBranch *muon2_diphodz_branch;
  bool     muon2_diphodz_isLoaded;
  float    muon1_pxHits_;
  TBranch *muon1_pxHits_branch;
  bool     muon1_pxHits_isLoaded;
  float    muon2_pxHits_;
  TBranch *muon2_pxHits_branch;
  bool     muon2_pxHits_isLoaded;
  float    muon1_tkLayers_;
  TBranch *muon1_tkLayers_branch;
  bool     muon1_tkLayers_isLoaded;
  float    muon2_tkLayers_;
  TBranch *muon2_tkLayers_branch;
  bool     muon2_tkLayers_isLoaded;
  float    muon1_PassTight_;
  TBranch *muon1_PassTight_branch;
  bool     muon1_PassTight_isLoaded;
  float    muon2_PassTight_;
  TBranch *muon2_PassTight_branch;
  bool     muon2_PassTight_isLoaded;
  float    muon1_dPhiMET_;
  TBranch *muon1_dPhiMET_branch;
  bool     muon1_dPhiMET_isLoaded;
  float    muon2_dPhiMET_;
  TBranch *muon2_dPhiMET_branch;
  bool     muon2_dPhiMET_isLoaded;
  float    n_fwdjets_;
  TBranch *n_fwdjets_branch;
  bool     n_fwdjets_isLoaded;
  float    fwdjet1_pt_;
  TBranch *fwdjet1_pt_branch;
  bool     fwdjet1_pt_isLoaded;
  float    fwdjet2_pt_;
  TBranch *fwdjet2_pt_branch;
  bool     fwdjet2_pt_isLoaded;
  float    fwdjet3_pt_;
  TBranch *fwdjet3_pt_branch;
  bool     fwdjet3_pt_isLoaded;
  float    fwdjet1_eta_;
  TBranch *fwdjet1_eta_branch;
  bool     fwdjet1_eta_isLoaded;
  float    fwdjet2_eta_;
  TBranch *fwdjet2_eta_branch;
  bool     fwdjet2_eta_isLoaded;
  float    fwdjet3_eta_;
  TBranch *fwdjet3_eta_branch;
  bool     fwdjet3_eta_isLoaded;
  float    fwdjet4_eta_;
  TBranch *fwdjet4_eta_branch;
  bool     fwdjet4_eta_isLoaded;
  float    fwdjet5_eta_;
  TBranch *fwdjet5_eta_branch;
  bool     fwdjet5_eta_isLoaded;
  float    fwdjet6_eta_;
  TBranch *fwdjet6_eta_branch;
  bool     fwdjet6_eta_isLoaded;
  float    fwdjet7_eta_;
  TBranch *fwdjet7_eta_branch;
  bool     fwdjet7_eta_isLoaded;
  float    fwdjet8_eta_;
  TBranch *fwdjet8_eta_branch;
  bool     fwdjet8_eta_isLoaded;
  float    fwdjet9_eta_;
  TBranch *fwdjet9_eta_branch;
  bool     fwdjet9_eta_isLoaded;
  float    fwdjet1_phi_;
  TBranch *fwdjet1_phi_branch;
  bool     fwdjet1_phi_isLoaded;
  float    fwdjet2_phi_;
  TBranch *fwdjet2_phi_branch;
  bool     fwdjet2_phi_isLoaded;
  float    fwdjet3_phi_;
  TBranch *fwdjet3_phi_branch;
  bool     fwdjet3_phi_isLoaded;
  float    fwdjet1_e_;
  TBranch *fwdjet1_e_branch;
  bool     fwdjet1_e_isLoaded;
  float    fwdjet2_e_;
  TBranch *fwdjet2_e_branch;
  bool     fwdjet2_e_isLoaded;
  float    fwdjet3_e_;
  TBranch *fwdjet3_e_branch;
  bool     fwdjet3_e_isLoaded;
  float    fwdjet1_discr_;
  TBranch *fwdjet1_discr_branch;
  bool     fwdjet1_discr_isLoaded;
  float    n_M_bjets_;
  TBranch *n_M_bjets_branch;
  bool     n_M_bjets_isLoaded;
  float    n_L_bjets_;
  TBranch *n_L_bjets_branch;
  bool     n_L_bjets_isLoaded;
  float    n_T_bjets_;
  TBranch *n_T_bjets_branch;
  bool     n_T_bjets_isLoaded;
  float    n_bjets_;
  TBranch *n_bjets_branch;
  bool     n_bjets_isLoaded;
  float    bjet1_pt_;
  TBranch *bjet1_pt_branch;
  bool     bjet1_pt_isLoaded;
  float    bjet2_pt_;
  TBranch *bjet2_pt_branch;
  bool     bjet2_pt_isLoaded;
  float    bjet3_pt_;
  TBranch *bjet3_pt_branch;
  bool     bjet3_pt_isLoaded;
  float    bjet1_eta_;
  TBranch *bjet1_eta_branch;
  bool     bjet1_eta_isLoaded;
  float    bjet2_eta_;
  TBranch *bjet2_eta_branch;
  bool     bjet2_eta_isLoaded;
  float    bjet3_eta_;
  TBranch *bjet3_eta_branch;
  bool     bjet3_eta_isLoaded;
  float    bjet1_phi_;
  TBranch *bjet1_phi_branch;
  bool     bjet1_phi_isLoaded;
  float    bjet2_phi_;
  TBranch *bjet2_phi_branch;
  bool     bjet2_phi_isLoaded;
  float    bjet3_phi_;
  TBranch *bjet3_phi_branch;
  bool     bjet3_phi_isLoaded;
  float    bjet1_e_;
  TBranch *bjet1_e_branch;
  bool     bjet1_e_isLoaded;
  float    bjet2_e_;
  TBranch *bjet2_e_branch;
  bool     bjet2_e_isLoaded;
  float    bjet3_e_;
  TBranch *bjet3_e_branch;
  bool     bjet3_e_isLoaded;
  float    bjet1_discr_;
  TBranch *bjet1_discr_branch;
  bool     bjet1_discr_isLoaded;
  float    bjet2_discr_;
  TBranch *bjet2_discr_branch;
  bool     bjet2_discr_isLoaded;
  float    bjet3_discr_;
  TBranch *bjet3_discr_branch;
  bool     bjet3_discr_isLoaded;
  float    bjet4_discr_;
  TBranch *bjet4_discr_branch;
  bool     bjet4_discr_isLoaded;
  float    n_jets_;
  TBranch *n_jets_branch;
  bool     n_jets_isLoaded;
  float    jet1_pt_;
  TBranch *jet1_pt_branch;
  bool     jet1_pt_isLoaded;
  float    jet2_pt_;
  TBranch *jet2_pt_branch;
  bool     jet2_pt_isLoaded;
  float    jet3_pt_;
  TBranch *jet3_pt_branch;
  bool     jet3_pt_isLoaded;
  float    jet4_pt_;
  TBranch *jet4_pt_branch;
  bool     jet4_pt_isLoaded;
  float    jet5_pt_;
  TBranch *jet5_pt_branch;
  bool     jet5_pt_isLoaded;
  float    jet6_pt_;
  TBranch *jet6_pt_branch;
  bool     jet6_pt_isLoaded;
  float    jet7_pt_;
  TBranch *jet7_pt_branch;
  bool     jet7_pt_isLoaded;
  float    jet8_pt_;
  TBranch *jet8_pt_branch;
  bool     jet8_pt_isLoaded;
  float    jet9_pt_;
  TBranch *jet9_pt_branch;
  bool     jet9_pt_isLoaded;
  float    jet10_pt_;
  TBranch *jet10_pt_branch;
  bool     jet10_pt_isLoaded;
  float    jet11_pt_;
  TBranch *jet11_pt_branch;
  bool     jet11_pt_isLoaded;
  float    jet12_pt_;
  TBranch *jet12_pt_branch;
  bool     jet12_pt_isLoaded;
  float    jet13_pt_;
  TBranch *jet13_pt_branch;
  bool     jet13_pt_isLoaded;
  float    jet14_pt_;
  TBranch *jet14_pt_branch;
  bool     jet14_pt_isLoaded;
  float    jet15_pt_;
  TBranch *jet15_pt_branch;
  bool     jet15_pt_isLoaded;
  float    jet1_eta_;
  TBranch *jet1_eta_branch;
  bool     jet1_eta_isLoaded;
  float    jet2_eta_;
  TBranch *jet2_eta_branch;
  bool     jet2_eta_isLoaded;
  float    jet3_eta_;
  TBranch *jet3_eta_branch;
  bool     jet3_eta_isLoaded;
  float    jet4_eta_;
  TBranch *jet4_eta_branch;
  bool     jet4_eta_isLoaded;
  float    jet5_eta_;
  TBranch *jet5_eta_branch;
  bool     jet5_eta_isLoaded;
  float    jet6_eta_;
  TBranch *jet6_eta_branch;
  bool     jet6_eta_isLoaded;
  float    jet7_eta_;
  TBranch *jet7_eta_branch;
  bool     jet7_eta_isLoaded;
  float    jet8_eta_;
  TBranch *jet8_eta_branch;
  bool     jet8_eta_isLoaded;
  float    jet9_eta_;
  TBranch *jet9_eta_branch;
  bool     jet9_eta_isLoaded;
  float    jet10_eta_;
  TBranch *jet10_eta_branch;
  bool     jet10_eta_isLoaded;
  float    jet11_eta_;
  TBranch *jet11_eta_branch;
  bool     jet11_eta_isLoaded;
  float    jet12_eta_;
  TBranch *jet12_eta_branch;
  bool     jet12_eta_isLoaded;
  float    jet13_eta_;
  TBranch *jet13_eta_branch;
  bool     jet13_eta_isLoaded;
  float    jet14_eta_;
  TBranch *jet14_eta_branch;
  bool     jet14_eta_isLoaded;
  float    jet15_eta_;
  TBranch *jet15_eta_branch;
  bool     jet15_eta_isLoaded;
  float    jet1_phi_;
  TBranch *jet1_phi_branch;
  bool     jet1_phi_isLoaded;
  float    jet2_phi_;
  TBranch *jet2_phi_branch;
  bool     jet2_phi_isLoaded;
  float    jet3_phi_;
  TBranch *jet3_phi_branch;
  bool     jet3_phi_isLoaded;
  float    jet4_phi_;
  TBranch *jet4_phi_branch;
  bool     jet4_phi_isLoaded;
  float    jet5_phi_;
  TBranch *jet5_phi_branch;
  bool     jet5_phi_isLoaded;
  float    jet6_phi_;
  TBranch *jet6_phi_branch;
  bool     jet6_phi_isLoaded;
  float    jet7_phi_;
  TBranch *jet7_phi_branch;
  bool     jet7_phi_isLoaded;
  float    jet8_phi_;
  TBranch *jet8_phi_branch;
  bool     jet8_phi_isLoaded;
  float    jet9_phi_;
  TBranch *jet9_phi_branch;
  bool     jet9_phi_isLoaded;
  float    jet10_phi_;
  TBranch *jet10_phi_branch;
  bool     jet10_phi_isLoaded;
  float    jet11_phi_;
  TBranch *jet11_phi_branch;
  bool     jet11_phi_isLoaded;
  float    jet12_phi_;
  TBranch *jet12_phi_branch;
  bool     jet12_phi_isLoaded;
  float    jet13_phi_;
  TBranch *jet13_phi_branch;
  bool     jet13_phi_isLoaded;
  float    jet14_phi_;
  TBranch *jet14_phi_branch;
  bool     jet14_phi_isLoaded;
  float    jet15_phi_;
  TBranch *jet15_phi_branch;
  bool     jet15_phi_isLoaded;
  float    jet1_e_;
  TBranch *jet1_e_branch;
  bool     jet1_e_isLoaded;
  float    jet2_e_;
  TBranch *jet2_e_branch;
  bool     jet2_e_isLoaded;
  float    jet3_e_;
  TBranch *jet3_e_branch;
  bool     jet3_e_isLoaded;
  float    jet4_e_;
  TBranch *jet4_e_branch;
  bool     jet4_e_isLoaded;
  float    jet5_e_;
  TBranch *jet5_e_branch;
  bool     jet5_e_isLoaded;
  float    jet6_e_;
  TBranch *jet6_e_branch;
  bool     jet6_e_isLoaded;
  float    jet7_e_;
  TBranch *jet7_e_branch;
  bool     jet7_e_isLoaded;
  float    jet8_e_;
  TBranch *jet8_e_branch;
  bool     jet8_e_isLoaded;
  float    jet9_e_;
  TBranch *jet9_e_branch;
  bool     jet9_e_isLoaded;
  float    jet10_e_;
  TBranch *jet10_e_branch;
  bool     jet10_e_isLoaded;
  float    jet11_e_;
  TBranch *jet11_e_branch;
  bool     jet11_e_isLoaded;
  float    jet12_e_;
  TBranch *jet12_e_branch;
  bool     jet12_e_isLoaded;
  float    jet13_e_;
  TBranch *jet13_e_branch;
  bool     jet13_e_isLoaded;
  float    jet14_e_;
  TBranch *jet14_e_branch;
  bool     jet14_e_isLoaded;
  float    jet15_e_;
  TBranch *jet15_e_branch;
  bool     jet15_e_isLoaded;
  float    jet1_discr_;
  TBranch *jet1_discr_branch;
  bool     jet1_discr_isLoaded;
  float    jet2_discr_;
  TBranch *jet2_discr_branch;
  bool     jet2_discr_isLoaded;
  float    jet3_discr_;
  TBranch *jet3_discr_branch;
  bool     jet3_discr_isLoaded;
  float    jet4_discr_;
  TBranch *jet4_discr_branch;
  bool     jet4_discr_isLoaded;
  float    jet5_discr_;
  TBranch *jet5_discr_branch;
  bool     jet5_discr_isLoaded;
  float    jet6_discr_;
  TBranch *jet6_discr_branch;
  bool     jet6_discr_isLoaded;
  float    jet7_discr_;
  TBranch *jet7_discr_branch;
  bool     jet7_discr_isLoaded;
  float    jet8_discr_;
  TBranch *jet8_discr_branch;
  bool     jet8_discr_isLoaded;
  float    jet9_discr_;
  TBranch *jet9_discr_branch;
  bool     jet9_discr_isLoaded;
  float    jet10_discr_;
  TBranch *jet10_discr_branch;
  bool     jet10_discr_isLoaded;
  float    jet11_discr_;
  TBranch *jet11_discr_branch;
  bool     jet11_discr_isLoaded;
  float    jet12_discr_;
  TBranch *jet12_discr_branch;
  bool     jet12_discr_isLoaded;
  float    jet13_discr_;
  TBranch *jet13_discr_branch;
  bool     jet13_discr_isLoaded;
  float    jet14_discr_;
  TBranch *jet14_discr_branch;
  bool     jet14_discr_isLoaded;
  float    jet15_discr_;
  TBranch *jet15_discr_branch;
  bool     jet15_discr_isLoaded;
  float    recoMET_pt_;
  TBranch *recoMET_pt_branch;
  bool     recoMET_pt_isLoaded;
  float    recoMET_eta_;
  TBranch *recoMET_eta_branch;
  bool     recoMET_eta_isLoaded;
  float    recoMET_phi_;
  TBranch *recoMET_phi_branch;
  bool     recoMET_phi_isLoaded;
  float    recoMET_e_;
  TBranch *recoMET_e_branch;
  bool     recoMET_e_isLoaded;
  float    solvedMET_pt_;
  TBranch *solvedMET_pt_branch;
  bool     solvedMET_pt_isLoaded;
  float    solvedMET_eta_;
  TBranch *solvedMET_eta_branch;
  bool     solvedMET_eta_isLoaded;
  float    solvedMET_phi_;
  TBranch *solvedMET_phi_branch;
  bool     solvedMET_phi_isLoaded;
  float    solvedMET_e_;
  TBranch *solvedMET_e_branch;
  bool     solvedMET_e_isLoaded;
  float    dr_leadphobjet_;
  TBranch *dr_leadphobjet_branch;
  bool     dr_leadphobjet_isLoaded;
  float    dr_leptonfwdjet_;
  TBranch *dr_leptonfwdjet_branch;
  bool     dr_leptonfwdjet_isLoaded;
  float    top_mt_;
  TBranch *top_mt_branch;
  bool     top_mt_isLoaded;
  float    top_mass_;
  TBranch *top_mass_branch;
  bool     top_mass_isLoaded;
  float    HT_;
  TBranch *HT_branch;
  bool     HT_isLoaded;
  float    gen_parton1_pt_;
  TBranch *gen_parton1_pt_branch;
  bool     gen_parton1_pt_isLoaded;
  float    gen_parton2_pt_;
  TBranch *gen_parton2_pt_branch;
  bool     gen_parton2_pt_isLoaded;
  float    gen_parton3_pt_;
  TBranch *gen_parton3_pt_branch;
  bool     gen_parton3_pt_isLoaded;
  float    gen_parton4_pt_;
  TBranch *gen_parton4_pt_branch;
  bool     gen_parton4_pt_isLoaded;
  float    gen_parton5_pt_;
  TBranch *gen_parton5_pt_branch;
  bool     gen_parton5_pt_isLoaded;
  float    gen_parton6_pt_;
  TBranch *gen_parton6_pt_branch;
  bool     gen_parton6_pt_isLoaded;
  float    gen_parton7_pt_;
  TBranch *gen_parton7_pt_branch;
  bool     gen_parton7_pt_isLoaded;
  float    gen_parton8_pt_;
  TBranch *gen_parton8_pt_branch;
  bool     gen_parton8_pt_isLoaded;
  float    gen_parton9_pt_;
  TBranch *gen_parton9_pt_branch;
  bool     gen_parton9_pt_isLoaded;
  float    gen_parton10_pt_;
  TBranch *gen_parton10_pt_branch;
  bool     gen_parton10_pt_isLoaded;
  float    gen_parton1_eta_;
  TBranch *gen_parton1_eta_branch;
  bool     gen_parton1_eta_isLoaded;
  float    gen_parton2_eta_;
  TBranch *gen_parton2_eta_branch;
  bool     gen_parton2_eta_isLoaded;
  float    gen_parton3_eta_;
  TBranch *gen_parton3_eta_branch;
  bool     gen_parton3_eta_isLoaded;
  float    gen_parton4_eta_;
  TBranch *gen_parton4_eta_branch;
  bool     gen_parton4_eta_isLoaded;
  float    gen_parton5_eta_;
  TBranch *gen_parton5_eta_branch;
  bool     gen_parton5_eta_isLoaded;
  float    gen_parton6_eta_;
  TBranch *gen_parton6_eta_branch;
  bool     gen_parton6_eta_isLoaded;
  float    gen_parton7_eta_;
  TBranch *gen_parton7_eta_branch;
  bool     gen_parton7_eta_isLoaded;
  float    gen_parton8_eta_;
  TBranch *gen_parton8_eta_branch;
  bool     gen_parton8_eta_isLoaded;
  float    gen_parton9_eta_;
  TBranch *gen_parton9_eta_branch;
  bool     gen_parton9_eta_isLoaded;
  float    gen_parton10_eta_;
  TBranch *gen_parton10_eta_branch;
  bool     gen_parton10_eta_isLoaded;
  float    gen_parton1_phi_;
  TBranch *gen_parton1_phi_branch;
  bool     gen_parton1_phi_isLoaded;
  float    gen_parton2_phi_;
  TBranch *gen_parton2_phi_branch;
  bool     gen_parton2_phi_isLoaded;
  float    gen_parton3_phi_;
  TBranch *gen_parton3_phi_branch;
  bool     gen_parton3_phi_isLoaded;
  float    gen_parton4_phi_;
  TBranch *gen_parton4_phi_branch;
  bool     gen_parton4_phi_isLoaded;
  float    gen_parton5_phi_;
  TBranch *gen_parton5_phi_branch;
  bool     gen_parton5_phi_isLoaded;
  float    gen_parton6_phi_;
  TBranch *gen_parton6_phi_branch;
  bool     gen_parton6_phi_isLoaded;
  float    gen_parton7_phi_;
  TBranch *gen_parton7_phi_branch;
  bool     gen_parton7_phi_isLoaded;
  float    gen_parton8_phi_;
  TBranch *gen_parton8_phi_branch;
  bool     gen_parton8_phi_isLoaded;
  float    gen_parton9_phi_;
  TBranch *gen_parton9_phi_branch;
  bool     gen_parton9_phi_isLoaded;
  float    gen_parton10_phi_;
  TBranch *gen_parton10_phi_branch;
  bool     gen_parton10_phi_isLoaded;
  float    gen_parton1_mass_;
  TBranch *gen_parton1_mass_branch;
  bool     gen_parton1_mass_isLoaded;
  float    gen_parton2_mass_;
  TBranch *gen_parton2_mass_branch;
  bool     gen_parton2_mass_isLoaded;
  float    gen_parton3_mass_;
  TBranch *gen_parton3_mass_branch;
  bool     gen_parton3_mass_isLoaded;
  float    gen_parton4_mass_;
  TBranch *gen_parton4_mass_branch;
  bool     gen_parton4_mass_isLoaded;
  float    gen_parton5_mass_;
  TBranch *gen_parton5_mass_branch;
  bool     gen_parton5_mass_isLoaded;
  float    gen_parton6_mass_;
  TBranch *gen_parton6_mass_branch;
  bool     gen_parton6_mass_isLoaded;
  float    gen_parton7_mass_;
  TBranch *gen_parton7_mass_branch;
  bool     gen_parton7_mass_isLoaded;
  float    gen_parton8_mass_;
  TBranch *gen_parton8_mass_branch;
  bool     gen_parton8_mass_isLoaded;
  float    gen_parton9_mass_;
  TBranch *gen_parton9_mass_branch;
  bool     gen_parton9_mass_isLoaded;
  float    gen_parton10_mass_;
  TBranch *gen_parton10_mass_branch;
  bool     gen_parton10_mass_isLoaded;
  float    gen_parton1_pdgId_;
  TBranch *gen_parton1_pdgId_branch;
  bool     gen_parton1_pdgId_isLoaded;
  float    gen_parton2_pdgId_;
  TBranch *gen_parton2_pdgId_branch;
  bool     gen_parton2_pdgId_isLoaded;
  float    gen_parton3_pdgId_;
  TBranch *gen_parton3_pdgId_branch;
  bool     gen_parton3_pdgId_isLoaded;
  float    gen_parton4_pdgId_;
  TBranch *gen_parton4_pdgId_branch;
  bool     gen_parton4_pdgId_isLoaded;
  float    gen_parton5_pdgId_;
  TBranch *gen_parton5_pdgId_branch;
  bool     gen_parton5_pdgId_isLoaded;
  float    gen_parton6_pdgId_;
  TBranch *gen_parton6_pdgId_branch;
  bool     gen_parton6_pdgId_isLoaded;
  float    gen_parton7_pdgId_;
  TBranch *gen_parton7_pdgId_branch;
  bool     gen_parton7_pdgId_isLoaded;
  float    gen_parton8_pdgId_;
  TBranch *gen_parton8_pdgId_branch;
  bool     gen_parton8_pdgId_isLoaded;
  float    gen_parton9_pdgId_;
  TBranch *gen_parton9_pdgId_branch;
  bool     gen_parton9_pdgId_isLoaded;
  float    gen_parton10_pdgId_;
  TBranch *gen_parton10_pdgId_branch;
  bool     gen_parton10_pdgId_isLoaded;
  float    gen_parton1_status_;
  TBranch *gen_parton1_status_branch;
  bool     gen_parton1_status_isLoaded;
  float    gen_parton2_status_;
  TBranch *gen_parton2_status_branch;
  bool     gen_parton2_status_isLoaded;
  float    gen_parton3_status_;
  TBranch *gen_parton3_status_branch;
  bool     gen_parton3_status_isLoaded;
  float    gen_parton4_status_;
  TBranch *gen_parton4_status_branch;
  bool     gen_parton4_status_isLoaded;
  float    gen_parton5_status_;
  TBranch *gen_parton5_status_branch;
  bool     gen_parton5_status_isLoaded;
  float    gen_parton6_status_;
  TBranch *gen_parton6_status_branch;
  bool     gen_parton6_status_isLoaded;
  float    gen_parton7_status_;
  TBranch *gen_parton7_status_branch;
  bool     gen_parton7_status_isLoaded;
  float    gen_parton8_status_;
  TBranch *gen_parton8_status_branch;
  bool     gen_parton8_status_isLoaded;
  float    gen_parton9_status_;
  TBranch *gen_parton9_status_branch;
  bool     gen_parton9_status_isLoaded;
  float    gen_parton10_status_;
  TBranch *gen_parton10_status_branch;
  bool     gen_parton10_status_isLoaded;
  float    genMatched_jet0_pdgId_;
  TBranch *genMatched_jet0_pdgId_branch;
  bool     genMatched_jet0_pdgId_isLoaded;
  float    genMatched_jet1_pdgId_;
  TBranch *genMatched_jet1_pdgId_branch;
  bool     genMatched_jet1_pdgId_isLoaded;
  float    genMatched_jet2_pdgId_;
  TBranch *genMatched_jet2_pdgId_branch;
  bool     genMatched_jet2_pdgId_isLoaded;
  float    genMatched_jet0_index_;
  TBranch *genMatched_jet0_index_branch;
  bool     genMatched_jet0_index_isLoaded;
  float    genMatched_jet1_index_;
  TBranch *genMatched_jet1_index_branch;
  bool     genMatched_jet1_index_isLoaded;
  float    genMatched_jet2_index_;
  TBranch *genMatched_jet2_index_branch;
  bool     genMatched_jet2_index_isLoaded;
  float    genMatched_jet0_deltaR_;
  TBranch *genMatched_jet0_deltaR_branch;
  bool     genMatched_jet0_deltaR_isLoaded;
  float    genMatched_jet1_deltaR_;
  TBranch *genMatched_jet1_deltaR_branch;
  bool     genMatched_jet1_deltaR_isLoaded;
  float    genMatched_jet2_deltaR_;
  TBranch *genMatched_jet2_deltaR_branch;
  bool     genMatched_jet2_deltaR_isLoaded;
  float    genMET_pt_;
  TBranch *genMET_pt_branch;
  bool     genMET_pt_isLoaded;
  float    genMET_eta_;
  TBranch *genMET_eta_branch;
  bool     genMET_eta_isLoaded;
  float    genMET_phi_;
  TBranch *genMET_phi_branch;
  bool     genMET_phi_isLoaded;
  float    genMET_e_;
  TBranch *genMET_e_branch;
  bool     genMET_e_isLoaded;
  float    promptGenMET_pt_;
  TBranch *promptGenMET_pt_branch;
  bool     promptGenMET_pt_isLoaded;
  float    promptGenMET_eta_;
  TBranch *promptGenMET_eta_branch;
  bool     promptGenMET_eta_isLoaded;
  float    promptGenMET_phi_;
  TBranch *promptGenMET_phi_branch;
  bool     promptGenMET_phi_isLoaded;
  float    promptGenMET_e_;
  TBranch *promptGenMET_e_branch;
  bool     promptGenMET_e_isLoaded;
  float    genMETTrue_pt_;
  TBranch *genMETTrue_pt_branch;
  bool     genMETTrue_pt_isLoaded;
  float    genMETTrue_eta_;
  TBranch *genMETTrue_eta_branch;
  bool     genMETTrue_eta_isLoaded;
  float    genMETTrue_phi_;
  TBranch *genMETTrue_phi_branch;
  bool     genMETTrue_phi_isLoaded;
  float    genMETTrue_e_;
  TBranch *genMETTrue_e_branch;
  bool     genMETTrue_e_isLoaded;
  float    rho_;
  TBranch *rho_branch;
  bool     rho_isLoaded;
  int      nvtx_;
  TBranch *nvtx_branch;
  bool     nvtx_isLoaded;
  unsigned long long event_;
  TBranch *event_branch;
  bool     event_isLoaded;
  unsigned int lumi_;
  TBranch *lumi_branch;
  bool     lumi_isLoaded;
  int      processIndex_;
  TBranch *processIndex_branch;
  bool     processIndex_isLoaded;
  unsigned int run_;
  TBranch *run_branch;
  bool     run_isLoaded;
  float    npu_;
  TBranch *npu_branch;
  bool     npu_isLoaded;
  float    puweight_;
  TBranch *puweight_branch;
  bool     puweight_isLoaded;
public: 
void Init(TTree *tree);
void GetEntry(unsigned int idx); 
void LoadAllBranches(); 
  const int &candidate_id();
  const float &weight();
  const float &CMS_hgg_mass();
  const float &dZ();
  const float &centralObjectWeight();
  const float &vtxprob();
  const float &ptbal();
  const float &ptasym();
  const float &logspt2();
  const float &p2conv();
  const float &nconv();
  const float &vtxmva();
  const float &vtxdz();
  const float &vtx_x();
  const float &vtx_y();
  const float &vtx_z();
  const float &dipho_sumpt();
  const float &dipho_cosphi();
  const float &dipho_mass();
  const float &dipho_pt();
  const float &dipho_phi();
  const float &dipho_eta();
  const float &dipho_e();
  const float &dipho_PtoM();
  const float &cosphi();
  const float &sigmaMrvoM();
  const float &sigmaMwvoM();
  const float &dipho_leadPt();
  const float &dipho_leadEt();
  const float &dipho_leadEta();
  const float &dipho_leadPhi();
  const float &dipho_lead_sieie();
  const float &dipho_lead_hoe();
  const float &dipho_lead_sigmaEoE();
  const float &dipho_lead_ptoM();
  const float &dipho_leadR9();
  const float &dipho_leadIDMVA();
  const float &dipho_lead_elveto();
  const float &dipho_lead_prompt();
  const float &dipho_lead_chiso();
  const float &dipho_lead_chisow();
  const float &dipho_lead_phoiso();
  const float &dipho_lead_phoiso04();
  const float &dipho_lead_neutiso();
  const float &dipho_lead_ecaliso03();
  const float &dipho_lead_hcaliso03();
  const float &dipho_lead_pfcluecal03();
  const float &dipho_lead_pfcluhcal03();
  const float &dipho_lead_trkiso03();
  const float &dipho_lead_pfchiso2();
  const float &dipho_lead_haspixelseed();
  const float &dipho_lead_sieip();
  const float &dipho_lead_etawidth();
  const float &dipho_lead_phiwidth();
  const float &dipho_lead_regrerr();
  const float &dipho_lead_s4ratio();
  const float &dipho_lead_effSigma();
  const float &dipho_lead_scraw();
  const float &dipho_lead_ese();
  const float &dipho_subleadPt();
  const float &dipho_subleadEt();
  const float &dipho_subleadEta();
  const float &dipho_subleadPhi();
  const float &dipho_sublead_sieie();
  const float &dipho_sublead_hoe();
  const float &dipho_sublead_sigmaEoE();
  const float &dipho_sublead_ptoM();
  const float &dipho_subleadR9();
  const float &dipho_subleadIDMVA();
  const float &dipho_sublead_elveto();
  const float &dipho_sulead_prompt();
  const float &dipho_sublead_chiso();
  const float &dipho_sublead_chisow();
  const float &dipho_sublead_phoiso();
  const float &dipho_sublead_phoiso04();
  const float &dipho_sublead_neutiso();
  const float &dipho_sublead_ecaliso03();
  const float &dipho_sublead_hcaliso03();
  const float &dipho_sublead_pfcluecal03();
  const float &dipho_sublead_pfcluhcal03();
  const float &dipho_sublead_trkiso03();
  const float &dipho_sublead_pfchiso2();
  const float &dipho_sublead_haspixelseed();
  const float &dipho_sublead_sieip();
  const float &dipho_sublead_etawidth();
  const float &dipho_sublead_phiwidth();
  const float &dipho_sublead_regrerr();
  const float &dipho_sublead_s4ratio();
  const float &dipho_sublead_effSigma();
  const float &dipho_sublead_scraw();
  const float &dipho_sublead_ese();
  const float &LeptonType();
  const float &n_ele();
  const float &n_loose_ele();
  const float &n_veto_ele();
  const float &n_medium_ele();
  const float &n_tight_ele();
  const float &ele1_pt();
  const float &ele2_pt();
  const float &ele1_eta();
  const float &ele2_eta();
  const float &ele1_phi();
  const float &ele2_phi();
  const float &ele1_e();
  const float &ele2_e();
  const float &ele1_ch();
  const float &ele2_ch();
  const float &ele1_sigmaIetaIeta();
  const float &ele2_sigmaIetaIeta();
  const float &ele1_dEtaInSeed();
  const float &ele2_dEtaInSeed();
  const float &ele1_dPhiIn();
  const float &ele2_dPhiIn();
  const float &ele1_hOverE();
  const float &ele2_hOverE();
  const float &ele1_RelIsoEA();
  const float &ele2_RelIsoEA();
  const float &ele1_ooEmooP();
  const float &ele2_ooEmooP();
  const float &ele1_dxy();
  const float &ele2_dxy();
  const float &ele1_diphodxy();
  const float &ele2_diphodxy();
  const float &ele1_dz();
  const float &ele2_dz();
  const float &ele1_diphodz();
  const float &ele2_diphodz();
  const float &ele1_misHits();
  const float &ele2_misHits();
  const float &ele1_ConversionVeto();
  const float &ele2_ConversionVeto();
  const float &ele1_ChargedHadronPt();
  const float &ele2_ChargedHadronPt();
  const float &ele2_NeutralHadronEt();
  const float &ele1_NeutralHadronEt();
  const float &ele1_PhotonEt();
  const float &ele2_PhotonEt();
  const float &ele1_PassTight();
  const float &ele2_PassTight();
  const float &ele1_PassVeto();
  const float &ele2_PassVeto();
  const float &ele1_dPhiMET();
  const float &ele2_dPhiMET();
  const float &n_muons();
  const float &n_LooseMu25();
  const float &n_LooseMu15();
  const float &n_TightMu25();
  const float &n_TightMu15();
  const float &n_MediumMu25();
  const float &n_MediumMu15();
  const float &muon1_pt();
  const float &muon2_pt();
  const float &muon1_eta();
  const float &muon2_eta();
  const float &muon1_phi();
  const float &muon2_phi();
  const float &muon1_e();
  const float &muon2_e();
  const float &muon1_ch();
  const float &muon2_ch();
  const float &muon1_iso();
  const float &muon2_iso();
  const float &muon1_chi2();
  const float &muon2_chi2();
  const float &muon1_mHits();
  const float &muon2_mHits();
  const float &muon1_mStations();
  const float &muon2_mStations();
  const float &muon1_dxy();
  const float &muon2_dxy();
  const float &muon1_diphodxy();
  const float &muon2_diphodxy();
  const float &muon1_dz();
  const float &muon2_dz();
  const float &muon1_diphodz();
  const float &muon2_diphodz();
  const float &muon1_pxHits();
  const float &muon2_pxHits();
  const float &muon1_tkLayers();
  const float &muon2_tkLayers();
  const float &muon1_PassTight();
  const float &muon2_PassTight();
  const float &muon1_dPhiMET();
  const float &muon2_dPhiMET();
  const float &n_fwdjets();
  const float &fwdjet1_pt();
  const float &fwdjet2_pt();
  const float &fwdjet3_pt();
  const float &fwdjet1_eta();
  const float &fwdjet2_eta();
  const float &fwdjet3_eta();
  const float &fwdjet4_eta();
  const float &fwdjet5_eta();
  const float &fwdjet6_eta();
  const float &fwdjet7_eta();
  const float &fwdjet8_eta();
  const float &fwdjet9_eta();
  const float &fwdjet1_phi();
  const float &fwdjet2_phi();
  const float &fwdjet3_phi();
  const float &fwdjet1_e();
  const float &fwdjet2_e();
  const float &fwdjet3_e();
  const float &fwdjet1_discr();
  const float &n_M_bjets();
  const float &n_L_bjets();
  const float &n_T_bjets();
  const float &n_bjets();
  const float &bjet1_pt();
  const float &bjet2_pt();
  const float &bjet3_pt();
  const float &bjet1_eta();
  const float &bjet2_eta();
  const float &bjet3_eta();
  const float &bjet1_phi();
  const float &bjet2_phi();
  const float &bjet3_phi();
  const float &bjet1_e();
  const float &bjet2_e();
  const float &bjet3_e();
  const float &bjet1_discr();
  const float &bjet2_discr();
  const float &bjet3_discr();
  const float &bjet4_discr();
  const float &n_jets();
  const float &jet1_pt();
  const float &jet2_pt();
  const float &jet3_pt();
  const float &jet4_pt();
  const float &jet5_pt();
  const float &jet6_pt();
  const float &jet7_pt();
  const float &jet8_pt();
  const float &jet9_pt();
  const float &jet10_pt();
  const float &jet11_pt();
  const float &jet12_pt();
  const float &jet13_pt();
  const float &jet14_pt();
  const float &jet15_pt();
  const float &jet1_eta();
  const float &jet2_eta();
  const float &jet3_eta();
  const float &jet4_eta();
  const float &jet5_eta();
  const float &jet6_eta();
  const float &jet7_eta();
  const float &jet8_eta();
  const float &jet9_eta();
  const float &jet10_eta();
  const float &jet11_eta();
  const float &jet12_eta();
  const float &jet13_eta();
  const float &jet14_eta();
  const float &jet15_eta();
  const float &jet1_phi();
  const float &jet2_phi();
  const float &jet3_phi();
  const float &jet4_phi();
  const float &jet5_phi();
  const float &jet6_phi();
  const float &jet7_phi();
  const float &jet8_phi();
  const float &jet9_phi();
  const float &jet10_phi();
  const float &jet11_phi();
  const float &jet12_phi();
  const float &jet13_phi();
  const float &jet14_phi();
  const float &jet15_phi();
  const float &jet1_e();
  const float &jet2_e();
  const float &jet3_e();
  const float &jet4_e();
  const float &jet5_e();
  const float &jet6_e();
  const float &jet7_e();
  const float &jet8_e();
  const float &jet9_e();
  const float &jet10_e();
  const float &jet11_e();
  const float &jet12_e();
  const float &jet13_e();
  const float &jet14_e();
  const float &jet15_e();
  const float &jet1_discr();
  const float &jet2_discr();
  const float &jet3_discr();
  const float &jet4_discr();
  const float &jet5_discr();
  const float &jet6_discr();
  const float &jet7_discr();
  const float &jet8_discr();
  const float &jet9_discr();
  const float &jet10_discr();
  const float &jet11_discr();
  const float &jet12_discr();
  const float &jet13_discr();
  const float &jet14_discr();
  const float &jet15_discr();
  const float &recoMET_pt();
  const float &recoMET_eta();
  const float &recoMET_phi();
  const float &recoMET_e();
  const float &solvedMET_pt();
  const float &solvedMET_eta();
  const float &solvedMET_phi();
  const float &solvedMET_e();
  const float &dr_leadphobjet();
  const float &dr_leptonfwdjet();
  const float &top_mt();
  const float &top_mass();
  const float &HT();
  const float &gen_parton1_pt();
  const float &gen_parton2_pt();
  const float &gen_parton3_pt();
  const float &gen_parton4_pt();
  const float &gen_parton5_pt();
  const float &gen_parton6_pt();
  const float &gen_parton7_pt();
  const float &gen_parton8_pt();
  const float &gen_parton9_pt();
  const float &gen_parton10_pt();
  const float &gen_parton1_eta();
  const float &gen_parton2_eta();
  const float &gen_parton3_eta();
  const float &gen_parton4_eta();
  const float &gen_parton5_eta();
  const float &gen_parton6_eta();
  const float &gen_parton7_eta();
  const float &gen_parton8_eta();
  const float &gen_parton9_eta();
  const float &gen_parton10_eta();
  const float &gen_parton1_phi();
  const float &gen_parton2_phi();
  const float &gen_parton3_phi();
  const float &gen_parton4_phi();
  const float &gen_parton5_phi();
  const float &gen_parton6_phi();
  const float &gen_parton7_phi();
  const float &gen_parton8_phi();
  const float &gen_parton9_phi();
  const float &gen_parton10_phi();
  const float &gen_parton1_mass();
  const float &gen_parton2_mass();
  const float &gen_parton3_mass();
  const float &gen_parton4_mass();
  const float &gen_parton5_mass();
  const float &gen_parton6_mass();
  const float &gen_parton7_mass();
  const float &gen_parton8_mass();
  const float &gen_parton9_mass();
  const float &gen_parton10_mass();
  const float &gen_parton1_pdgId();
  const float &gen_parton2_pdgId();
  const float &gen_parton3_pdgId();
  const float &gen_parton4_pdgId();
  const float &gen_parton5_pdgId();
  const float &gen_parton6_pdgId();
  const float &gen_parton7_pdgId();
  const float &gen_parton8_pdgId();
  const float &gen_parton9_pdgId();
  const float &gen_parton10_pdgId();
  const float &gen_parton1_status();
  const float &gen_parton2_status();
  const float &gen_parton3_status();
  const float &gen_parton4_status();
  const float &gen_parton5_status();
  const float &gen_parton6_status();
  const float &gen_parton7_status();
  const float &gen_parton8_status();
  const float &gen_parton9_status();
  const float &gen_parton10_status();
  const float &genMatched_jet0_pdgId();
  const float &genMatched_jet1_pdgId();
  const float &genMatched_jet2_pdgId();
  const float &genMatched_jet0_index();
  const float &genMatched_jet1_index();
  const float &genMatched_jet2_index();
  const float &genMatched_jet0_deltaR();
  const float &genMatched_jet1_deltaR();
  const float &genMatched_jet2_deltaR();
  const float &genMET_pt();
  const float &genMET_eta();
  const float &genMET_phi();
  const float &genMET_e();
  const float &promptGenMET_pt();
  const float &promptGenMET_eta();
  const float &promptGenMET_phi();
  const float &promptGenMET_e();
  const float &genMETTrue_pt();
  const float &genMETTrue_eta();
  const float &genMETTrue_phi();
  const float &genMETTrue_e();
  const float &rho();
  const int &nvtx();
  const unsigned long long &event();
  const unsigned int &lumi();
  const int &processIndex();
  const unsigned int &run();
  const float &npu();
  const float &puweight();

  static void progress(int nEventsTotal, int nEventsChain);
};

#ifndef __CINT__
extern tprimetHHadronic analyzer;
#endif

namespace tprime {
  const int &candidate_id();
  const float &weight();
  const float &CMS_hgg_mass();
  const float &dZ();
  const float &centralObjectWeight();
  const float &vtxprob();
  const float &ptbal();
  const float &ptasym();
  const float &logspt2();
  const float &p2conv();
  const float &nconv();
  const float &vtxmva();
  const float &vtxdz();
  const float &vtx_x();
  const float &vtx_y();
  const float &vtx_z();
  const float &dipho_sumpt();
  const float &dipho_cosphi();
  const float &dipho_mass();
  const float &dipho_pt();
  const float &dipho_phi();
  const float &dipho_eta();
  const float &dipho_e();
  const float &dipho_PtoM();
  const float &cosphi();
  const float &sigmaMrvoM();
  const float &sigmaMwvoM();
  const float &dipho_leadPt();
  const float &dipho_leadEt();
  const float &dipho_leadEta();
  const float &dipho_leadPhi();
  const float &dipho_lead_sieie();
  const float &dipho_lead_hoe();
  const float &dipho_lead_sigmaEoE();
  const float &dipho_lead_ptoM();
  const float &dipho_leadR9();
  const float &dipho_leadIDMVA();
  const float &dipho_lead_elveto();
  const float &dipho_lead_prompt();
  const float &dipho_lead_chiso();
  const float &dipho_lead_chisow();
  const float &dipho_lead_phoiso();
  const float &dipho_lead_phoiso04();
  const float &dipho_lead_neutiso();
  const float &dipho_lead_ecaliso03();
  const float &dipho_lead_hcaliso03();
  const float &dipho_lead_pfcluecal03();
  const float &dipho_lead_pfcluhcal03();
  const float &dipho_lead_trkiso03();
  const float &dipho_lead_pfchiso2();
  const float &dipho_lead_haspixelseed();
  const float &dipho_lead_sieip();
  const float &dipho_lead_etawidth();
  const float &dipho_lead_phiwidth();
  const float &dipho_lead_regrerr();
  const float &dipho_lead_s4ratio();
  const float &dipho_lead_effSigma();
  const float &dipho_lead_scraw();
  const float &dipho_lead_ese();
  const float &dipho_subleadPt();
  const float &dipho_subleadEt();
  const float &dipho_subleadEta();
  const float &dipho_subleadPhi();
  const float &dipho_sublead_sieie();
  const float &dipho_sublead_hoe();
  const float &dipho_sublead_sigmaEoE();
  const float &dipho_sublead_ptoM();
  const float &dipho_subleadR9();
  const float &dipho_subleadIDMVA();
  const float &dipho_sublead_elveto();
  const float &dipho_sulead_prompt();
  const float &dipho_sublead_chiso();
  const float &dipho_sublead_chisow();
  const float &dipho_sublead_phoiso();
  const float &dipho_sublead_phoiso04();
  const float &dipho_sublead_neutiso();
  const float &dipho_sublead_ecaliso03();
  const float &dipho_sublead_hcaliso03();
  const float &dipho_sublead_pfcluecal03();
  const float &dipho_sublead_pfcluhcal03();
  const float &dipho_sublead_trkiso03();
  const float &dipho_sublead_pfchiso2();
  const float &dipho_sublead_haspixelseed();
  const float &dipho_sublead_sieip();
  const float &dipho_sublead_etawidth();
  const float &dipho_sublead_phiwidth();
  const float &dipho_sublead_regrerr();
  const float &dipho_sublead_s4ratio();
  const float &dipho_sublead_effSigma();
  const float &dipho_sublead_scraw();
  const float &dipho_sublead_ese();
  const float &LeptonType();
  const float &n_ele();
  const float &n_loose_ele();
  const float &n_veto_ele();
  const float &n_medium_ele();
  const float &n_tight_ele();
  const float &ele1_pt();
  const float &ele2_pt();
  const float &ele1_eta();
  const float &ele2_eta();
  const float &ele1_phi();
  const float &ele2_phi();
  const float &ele1_e();
  const float &ele2_e();
  const float &ele1_ch();
  const float &ele2_ch();
  const float &ele1_sigmaIetaIeta();
  const float &ele2_sigmaIetaIeta();
  const float &ele1_dEtaInSeed();
  const float &ele2_dEtaInSeed();
  const float &ele1_dPhiIn();
  const float &ele2_dPhiIn();
  const float &ele1_hOverE();
  const float &ele2_hOverE();
  const float &ele1_RelIsoEA();
  const float &ele2_RelIsoEA();
  const float &ele1_ooEmooP();
  const float &ele2_ooEmooP();
  const float &ele1_dxy();
  const float &ele2_dxy();
  const float &ele1_diphodxy();
  const float &ele2_diphodxy();
  const float &ele1_dz();
  const float &ele2_dz();
  const float &ele1_diphodz();
  const float &ele2_diphodz();
  const float &ele1_misHits();
  const float &ele2_misHits();
  const float &ele1_ConversionVeto();
  const float &ele2_ConversionVeto();
  const float &ele1_ChargedHadronPt();
  const float &ele2_ChargedHadronPt();
  const float &ele2_NeutralHadronEt();
  const float &ele1_NeutralHadronEt();
  const float &ele1_PhotonEt();
  const float &ele2_PhotonEt();
  const float &ele1_PassTight();
  const float &ele2_PassTight();
  const float &ele1_PassVeto();
  const float &ele2_PassVeto();
  const float &ele1_dPhiMET();
  const float &ele2_dPhiMET();
  const float &n_muons();
  const float &n_LooseMu25();
  const float &n_LooseMu15();
  const float &n_TightMu25();
  const float &n_TightMu15();
  const float &n_MediumMu25();
  const float &n_MediumMu15();
  const float &muon1_pt();
  const float &muon2_pt();
  const float &muon1_eta();
  const float &muon2_eta();
  const float &muon1_phi();
  const float &muon2_phi();
  const float &muon1_e();
  const float &muon2_e();
  const float &muon1_ch();
  const float &muon2_ch();
  const float &muon1_iso();
  const float &muon2_iso();
  const float &muon1_chi2();
  const float &muon2_chi2();
  const float &muon1_mHits();
  const float &muon2_mHits();
  const float &muon1_mStations();
  const float &muon2_mStations();
  const float &muon1_dxy();
  const float &muon2_dxy();
  const float &muon1_diphodxy();
  const float &muon2_diphodxy();
  const float &muon1_dz();
  const float &muon2_dz();
  const float &muon1_diphodz();
  const float &muon2_diphodz();
  const float &muon1_pxHits();
  const float &muon2_pxHits();
  const float &muon1_tkLayers();
  const float &muon2_tkLayers();
  const float &muon1_PassTight();
  const float &muon2_PassTight();
  const float &muon1_dPhiMET();
  const float &muon2_dPhiMET();
  const float &n_fwdjets();
  const float &fwdjet1_pt();
  const float &fwdjet2_pt();
  const float &fwdjet3_pt();
  const float &fwdjet1_eta();
  const float &fwdjet2_eta();
  const float &fwdjet3_eta();
  const float &fwdjet4_eta();
  const float &fwdjet5_eta();
  const float &fwdjet6_eta();
  const float &fwdjet7_eta();
  const float &fwdjet8_eta();
  const float &fwdjet9_eta();
  const float &fwdjet1_phi();
  const float &fwdjet2_phi();
  const float &fwdjet3_phi();
  const float &fwdjet1_e();
  const float &fwdjet2_e();
  const float &fwdjet3_e();
  const float &fwdjet1_discr();
  const float &n_M_bjets();
  const float &n_L_bjets();
  const float &n_T_bjets();
  const float &n_bjets();
  const float &bjet1_pt();
  const float &bjet2_pt();
  const float &bjet3_pt();
  const float &bjet1_eta();
  const float &bjet2_eta();
  const float &bjet3_eta();
  const float &bjet1_phi();
  const float &bjet2_phi();
  const float &bjet3_phi();
  const float &bjet1_e();
  const float &bjet2_e();
  const float &bjet3_e();
  const float &bjet1_discr();
  const float &bjet2_discr();
  const float &bjet3_discr();
  const float &bjet4_discr();
  const float &n_jets();
  const float &jet1_pt();
  const float &jet2_pt();
  const float &jet3_pt();
  const float &jet4_pt();
  const float &jet5_pt();
  const float &jet6_pt();
  const float &jet7_pt();
  const float &jet8_pt();
  const float &jet9_pt();
  const float &jet10_pt();
  const float &jet11_pt();
  const float &jet12_pt();
  const float &jet13_pt();
  const float &jet14_pt();
  const float &jet15_pt();
  const float &jet1_eta();
  const float &jet2_eta();
  const float &jet3_eta();
  const float &jet4_eta();
  const float &jet5_eta();
  const float &jet6_eta();
  const float &jet7_eta();
  const float &jet8_eta();
  const float &jet9_eta();
  const float &jet10_eta();
  const float &jet11_eta();
  const float &jet12_eta();
  const float &jet13_eta();
  const float &jet14_eta();
  const float &jet15_eta();
  const float &jet1_phi();
  const float &jet2_phi();
  const float &jet3_phi();
  const float &jet4_phi();
  const float &jet5_phi();
  const float &jet6_phi();
  const float &jet7_phi();
  const float &jet8_phi();
  const float &jet9_phi();
  const float &jet10_phi();
  const float &jet11_phi();
  const float &jet12_phi();
  const float &jet13_phi();
  const float &jet14_phi();
  const float &jet15_phi();
  const float &jet1_e();
  const float &jet2_e();
  const float &jet3_e();
  const float &jet4_e();
  const float &jet5_e();
  const float &jet6_e();
  const float &jet7_e();
  const float &jet8_e();
  const float &jet9_e();
  const float &jet10_e();
  const float &jet11_e();
  const float &jet12_e();
  const float &jet13_e();
  const float &jet14_e();
  const float &jet15_e();
  const float &jet1_discr();
  const float &jet2_discr();
  const float &jet3_discr();
  const float &jet4_discr();
  const float &jet5_discr();
  const float &jet6_discr();
  const float &jet7_discr();
  const float &jet8_discr();
  const float &jet9_discr();
  const float &jet10_discr();
  const float &jet11_discr();
  const float &jet12_discr();
  const float &jet13_discr();
  const float &jet14_discr();
  const float &jet15_discr();
  const float &recoMET_pt();
  const float &recoMET_eta();
  const float &recoMET_phi();
  const float &recoMET_e();
  const float &solvedMET_pt();
  const float &solvedMET_eta();
  const float &solvedMET_phi();
  const float &solvedMET_e();
  const float &dr_leadphobjet();
  const float &dr_leptonfwdjet();
  const float &top_mt();
  const float &top_mass();
  const float &HT();
  const float &gen_parton1_pt();
  const float &gen_parton2_pt();
  const float &gen_parton3_pt();
  const float &gen_parton4_pt();
  const float &gen_parton5_pt();
  const float &gen_parton6_pt();
  const float &gen_parton7_pt();
  const float &gen_parton8_pt();
  const float &gen_parton9_pt();
  const float &gen_parton10_pt();
  const float &gen_parton1_eta();
  const float &gen_parton2_eta();
  const float &gen_parton3_eta();
  const float &gen_parton4_eta();
  const float &gen_parton5_eta();
  const float &gen_parton6_eta();
  const float &gen_parton7_eta();
  const float &gen_parton8_eta();
  const float &gen_parton9_eta();
  const float &gen_parton10_eta();
  const float &gen_parton1_phi();
  const float &gen_parton2_phi();
  const float &gen_parton3_phi();
  const float &gen_parton4_phi();
  const float &gen_parton5_phi();
  const float &gen_parton6_phi();
  const float &gen_parton7_phi();
  const float &gen_parton8_phi();
  const float &gen_parton9_phi();
  const float &gen_parton10_phi();
  const float &gen_parton1_mass();
  const float &gen_parton2_mass();
  const float &gen_parton3_mass();
  const float &gen_parton4_mass();
  const float &gen_parton5_mass();
  const float &gen_parton6_mass();
  const float &gen_parton7_mass();
  const float &gen_parton8_mass();
  const float &gen_parton9_mass();
  const float &gen_parton10_mass();
  const float &gen_parton1_pdgId();
  const float &gen_parton2_pdgId();
  const float &gen_parton3_pdgId();
  const float &gen_parton4_pdgId();
  const float &gen_parton5_pdgId();
  const float &gen_parton6_pdgId();
  const float &gen_parton7_pdgId();
  const float &gen_parton8_pdgId();
  const float &gen_parton9_pdgId();
  const float &gen_parton10_pdgId();
  const float &gen_parton1_status();
  const float &gen_parton2_status();
  const float &gen_parton3_status();
  const float &gen_parton4_status();
  const float &gen_parton5_status();
  const float &gen_parton6_status();
  const float &gen_parton7_status();
  const float &gen_parton8_status();
  const float &gen_parton9_status();
  const float &gen_parton10_status();
  const float &genMatched_jet0_pdgId();
  const float &genMatched_jet1_pdgId();
  const float &genMatched_jet2_pdgId();
  const float &genMatched_jet0_index();
  const float &genMatched_jet1_index();
  const float &genMatched_jet2_index();
  const float &genMatched_jet0_deltaR();
  const float &genMatched_jet1_deltaR();
  const float &genMatched_jet2_deltaR();
  const float &genMET_pt();
  const float &genMET_eta();
  const float &genMET_phi();
  const float &genMET_e();
  const float &promptGenMET_pt();
  const float &promptGenMET_eta();
  const float &promptGenMET_phi();
  const float &promptGenMET_e();
  const float &genMETTrue_pt();
  const float &genMETTrue_eta();
  const float &genMETTrue_phi();
  const float &genMETTrue_e();
  const float &rho();
  const int &nvtx();
  const unsigned long long &event();
  const unsigned int &lumi();
  const int &processIndex();
  const unsigned int &run();
  const float &npu();
  const float &puweight();
}
#endif
